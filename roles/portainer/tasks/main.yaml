- name: Gerar arquivo de configuração do portainer a partir do template
  template:
    src: "portainer.yaml.j2"
    dest: "/tmp/portainer.yaml"

# *************

# Se você deseja remover completamente a stack do Docker,
# incluindo todos os volumes, e depois reimplantá-la,
# você pode dividir isso em duas tarefas separadas no Ansible.
# Primeiro, você pode remover a stack existente e,
# em seguida, reimplantar a stack.

- name: Remove existing Portainer stack
  docker_stack:
    state: absent
    name: portainer

- name: Wait for all Portainer containers to be removed
  command: docker ps -a --filter "name=portainer" --format "{{'{{.Names}}'}}"
  register: result
  retries: 20
  delay: 1
  until: result.stdout == ""

- name: Remove Portainer volumes
  docker_volume:
    name: "{{ item }}"
    state: absent
  loop: 
    - portainer_data

# *********

- name: Ensure portainer stack is deployed
  docker_stack:
    state: present
    name: portainer
    compose:
      - "/tmp/portainer.yaml"
    prune: yes
    resolve_image: always

- name: Update Portainer stack
  docker_stack:
    state: present
    name: portainer
    compose:
      - "/tmp/portainer.yaml"
    prune: yes
    resolve_image: always

- name: Wait for Portainer service to be active
  shell: docker service ps portainer_portainer --no-trunc --filter "desired-state=running" --format "{{'{{.CurrentState}}'}}"
  register: result
  retries: 20
  delay: 1
  until: "'Running' in result.stdout"

- name: Verify SSL certificate
  command: echo | openssl s_client -servername {{ portainer_host }} -connect {{ portainer_host }}:443 2>/dev/null | openssl x509 -noout
  register: ssl_check
  retries: 5
  delay: 30
  until: ssl_check is succeeded
  ignore_errors: yes

- name: Clean up stack and volumes if SSL check failed
  block:
    - name: Remove portainer stack
      docker_stack:
        state: absent
        name: portainer
    - name: Remove portainer volumes
      docker_volume:
        name: "portainer_data"
        state: absent
  when: ssl_check is failed

- name: Retry stack deployment if SSL check failed
  include_tasks: main.yaml
  when: ssl_check is failed

# Adicionar as seguintes tarefas para autenticação e obtenção do token da API

- name: Create admin user initially
  uri:
    url: "http://ansible.manager:9000/api/users/admin/init"
    method: POST
    body_format: json
    body:
      Username: "{{ portainer_admin_user }}"
      Password: "{{ portainer_admin_password }}"
    status_code: 200

- name: Authenticate to Portainer and get token
  uri:
    url: http://ansible.manager:9000/api/auth
    method: POST
    body_format: json
    body:
      Username: "{{ portainer_admin_user }}"
      Password: "{{ portainer_admin_password }}"
    return_content: true
    status_code: 200
  register: login_portainer